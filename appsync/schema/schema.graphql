schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type ChatGpt {
  response: Int
  result: String
}

type ChatGptConnection {
  items: [ChatGpt]
  nextToken: String
}

type Mutation {
  createChatGpt(prompt: String): ChatGpt
  createNuxtMail(
    body: String
    createdat: String
    from: String
    subject: String
    to: String
    updatedat: String
  ): NuxtMail
}

type NuxtMail {
  response: Int
  result: String
}

type NuxtMailConnection {
  items: [NuxtMail]
  nextToken: String
}

type Query {
  getNuxtMail(id: ID!): NuxtMail
  listNuxtMails(
    filter: TableStringFilterInput
    limit: Int
    nextToken: String
  ): NuxtMailConnection
}

type Subscription {
  onCreateNuxtMail(body: String, id: ID): NuxtMail
    @aws_subscribe(mutations: ["createNuxtMail"])
}

input TableStringFilterInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
}
